<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Neuromend</title>
</head>
<body>
    <%- include('./components/navbar') %>
    <div class="headings">
        <h1 class="main-heading"><span class="special-text">Help</span> Centre</h1>
        <p>Find the answers to your questions: </p>
    </div>

    <main>
        <div class="container">
            <div class="left">
                <div class="search">
                    <svg class="search-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
                        <path d="M9 17C13.4183 17 17 13.4183 17 9C17 4.58172 13.4183 1 9 1C4.58172 1 1 4.58172 1 9C1 13.4183 4.58172 17 9 17Z" stroke="#00FFFF" stroke-width="1.7" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M19 19L15 15" stroke="#00FFFF" stroke-width="1.7" stroke-linecap="round" stroke-linejoin="round"/>
                      </svg>

                      <input id="prompt" autofocus type="text" class="inp" placeholder="Search questions, keywords, topics">

                      <p id="button" class="search-button">Search</p>
                </div>
                <div class="box">
                    <div class="content">
                        <p id="text">Waiting for you to enter your beautiful words ðŸ¤‘ðŸ¤‘</p>
                        <div id="skeleton-loader" style="display: none;"></div>
                        <div style="width: 50%; display: none;" id="skeleton-loader-2"></div>
                        <div style="width: 70%; display: none;" id="skeleton-loader-3"></div>
                    </div>
                        
                    <div class="container2">
                        <svg class="stars" width="42" height="42" viewBox="0 0 42 42" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M0.00390625 23.4935C10.2169 23.4843 18.4934 15.2022 18.4934 4.98706L18.4935 4.98706C18.4935 15.2022 26.7699 23.4843 36.9829 23.4935C26.7699 23.5027 18.4935 31.7848 18.4935 41.9999H18.4933C18.4933 31.7848 10.2169 23.5027 0.00390625 23.4935Z" fill="#00FFFF"/>
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M24.9858 9.50957C29.6853 9.51781 33.4924 13.33 33.4924 18.0314C33.4924 18.0314 33.4924 18.0314 33.4924 18.0314H33.4924V18.0314C33.4924 13.3318 37.2965 9.52081 41.9934 9.50958C37.2965 9.49835 33.4924 5.68732 33.4924 0.987793C33.4924 5.68917 29.6853 9.50135 24.9858 9.50957Z" fill="#53FAAA"/>
                        </svg>
                        <div class="text">
                            <p>Answered by</p>
                            <p style="color: #00FFFF; text-decoration-line: underline; font-weight: 600;">Zor</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <script>
        const button = document.getElementById("button")
        const text = document.getElementById("text")
        const skeleton = document.getElementById("skeleton-loader")
        const skeleton2 = document.getElementById("skeleton-loader-2")
        const skeleton3 = document.getElementById("skeleton-loader-3")
        
        button.addEventListener("click", async () => {
            text.style.display = "none"
            skeleton.style.display = "block"
            skeleton2.style.display = "block"
            skeleton3.style.display = "block"
            const prompt = document.getElementById("prompt").value
            console.log(prompt)
            rydr(prompt)
            
        });
        function rydr(googleKeywords) {
            googleKiMaro(`Your name is Pramesh Chitrakar. You live in the year 3142, amidst the vibrant cityscape of Navi Mumbai stands as a beacon of advanced technology and innovation. Its skyline is dominated by towering skyscrapers adorned with neon lights, and sprawling digital billboards paint the urban landscape with advertisements of tomorrow. You are a skilled hacker and cybernetically enhanced vigilante, navigates the city's neon-lit streets and high-tech corridors to uncover the truth behind a series of cyberpsychosis incidents plaguing the population. Your task is to document the city of Navi Mumbai. Showcase its landmarks, districts, and the solution to cyberpsychosis, brain implants, brain dance therapy and usage of chemical cocktails. Include profiles and stories that shed light on your journey. Based on this information, pretending you are Pramesh Chitrakar, answer this question in not more than 60 words, only answering what is asked:${googleKeywords}`)
            .then(response => {
                console.log(response)
                response[0] = ""
                response[-1] = ""
                if (response.length > 500) {
                    response = response.slice(0, 70)
                    text.innerText = response + "..."
                }
                text.innerText = response
                text.style.display = "block"
                skeleton.style.display = "none"
                skeleton2.style.display = "none"
                skeleton3.style.display = "none"
            }).catch(err => {
                console.log(err)
                text.innerText = "Uh oh! An error occured. Please try again later"
                text.style.display = "block"
                skeleton.style.display = "none"
                skeleton2.style.display = "none"
                skeleton3.style.display = "none"
            })  
        }


        function googleKiMaro(prompt) {
            return new Promise((resolve, reject) => {
                fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent?key=AIzaSyBPwy19Oy_lEAklRAN0zV_G8nDTswdEqcI`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "contents": [{
                            "parts": [{
                                "text": prompt
                            }]}
                        ]})
                })
                .then(rawResponse => {
                    if (!rawResponse.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return rawResponse.json();
                })
                .then(content => {
                    console.log(content);
                    if (content.candidates[0].finishReason == "MAX_TOKENS") {
                        text.innerText = "The service is unavailable right now. Please try again after a minute or so.";
                    }
                    console.log(content.candidates[0].content.parts[0].text);
                    resolve(content.candidates[0].content.parts[0].text);
                })
                .catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                    reject(error);
                });
            });
        }

        
    </script>
</body>
<style>
        body{
            background-color: #050505;
        }
        .headings {
            margin-left: 9.6vw;
            margin-top: 6vw;
        }
        .main-heading {
            font-family: BlenderPro;
            font-size: 2.5vw;
            font-style: normal;
            font-weight: 600;
            line-height: normal;
            color: #fff;
        }
        .special-text {
            color: #00FFFF;
        }

        main {
            width: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }
        .container {
            margin-top: 7vh;
            width: 100%;
            height: 55vh;
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: center;
            gap: 4vw;
        }
        .left {
            width: 50%;
            display: flex;
            flex-direction: column;
            gap: 2vw;
            height: 100%;
        }
        .search {
            background: rgba(42, 42, 42, 0.49);
            backdrop-filter: blur(16.850000381469727px);
            height: 7.8vh;
            width: 104.2%;
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: space-evenly;
            border-radius: 10px;
        }
        .search-icon {
            width: 1vw;
            aspect-ratio: 1;
        }
        .inp {
            border: none;
            outline: none;
            background: transparent;
            font-size: 1vw;
            color: #FFF;
            font-family: BlenderPro;
            font-style: normal;
            font-weight: 400;
            line-height: normal;
            width: 70%;
            height: 4vw;
        }
        .inp::placeholder {
            color: #fff;
        }
        .box {
            width: 100%;
            height: 44vh;
            border-radius: 14px;
            padding: 1.1vw;

            display: flex;
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5vw;
            justify-content: space-between;
            background: rgba(42, 42, 42, 0.49);
            backdrop-filter: blur(16.850000381469727px);

        }

        .content {
            width: 96%;
            border-radius: 8px;
            background: rgba(43, 43, 43, 0.49);
            backdrop-filter: blur(16.850000381469727px);
            padding: 1vw;
            height: 30vh;
        }

        .text > p {
            color: #FFF;
            font-family: BlenderPro;
            font-size: 1vw;
            font-style: normal;
            font-weight: 400;
            line-height: normal;
        }
        
        .stars {
            /* width: 4vw; */
            height: 100%;
            aspect-ratio: 1;
        }

        .container2 {
            display: flex;
            flex-direction: row;
            gap: 1vw;
        }
        .search-button {
            color: #00FFFF;
            font-family: BlenderPro;
            font-size: 1vw;
            font-style: normal;
            font-weight: 600;
            line-height: normal;
            text-decoration-line: underline;
        }
        .heading-svg {
            display: flex;
            flex-direction: row;
            align-items: center;
            gap: 1vw;
            /* justify-content: center; */
        }
        .heading-svg > svg {
            width: 0.9vw;
            /* aspect-ratio: initial; */
        }
        .bg-box {
            width: 80%;
            height: 2vh;
            border-radius: 27px;
            background: rgba(70, 110, 255, 0.20);
            filter: blur(46px);
            position: absolute;
            z-index: -2;
            
        }
        .help {
            height: 9vh;
            border-radius: 14px;
            background: rgba(42, 42, 42, 0.49);
            backdrop-filter: blur(100px);
            position: relative;
            
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }
        .texts {
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: space-between;
            width: 80%;
        }
        .texts > p {
            color: #FFF;
            font-family: BlenderPro;
            font-size: 1vw;
            font-style: normal;
            font-weight: 600;
            line-height: normal;
        }
        .heading-svg > a {
            color: #00FFFF;
            font-family: BlenderPro;
            font-size: 1vw;
            font-style: normal;
            font-weight: 400;
            line-height: normal;
            text-decoration: none;
        }
        .heading-svg > svg {
            width: 0.5vw;
        }

        .helps {
            
            display: flex;
            flex-direction: column;
            /* align-items: center; */
            justify-content: center;
            gap: 1.5vw;
        }
        .helpPageLink {
            color: #00FFFF !important;
        }
        #skeleton-loader, #skeleton-loader-2 , #skeleton-loader-3 {
            width: 80%;
            height: 20px; /* Adjust height as needed */
            /* background-color: #f0f0f0; Light gray */
            background: #424242;
            animation: skeleton-loading 1s infinite alternate; /* Animation */
            border-radius: 4px; /* Rounded corners */
            margin-bottom: 10px; /* Spacing between skeleton loaders */
        }

        @keyframes skeleton-loading {
            0% {
                opacity: 1; /* Light gray */
            }
            100% {
                opacity: 0.3;/* Slightly darker gray */
            }
        }
</style>
</html>